version: "3.3"

services: 
  c-a-stadistic:
    labels: 
      - "traefik.http.routers.c-carta.rule=Host(`c-a-stadistic.restoner-api.fun`)"
    restart: always 
    build: .
    networks:
      - backend
    links:
      - postgres
  postgres:
    container_name: postgres_db
    restart: always
    image: "bitnami/postgresql:14.4.0"
    networks:
      - backend
    ports:
      - "5432"
    volumes:
      - 'postgresql_master_data:/bitnami/postgresql'
    environment:
      - POSTGRESQL_REPLICATION_MODE=master
      - POSTGRESQL_REPLICATION_USER=replicacion_usuario_123f24
      - POSTGRESQL_REPLICATION_PASSWORD=replicacion_contrasenia_123f24
      - POSTGRESQL_USERNAME=postgreshxh5
      - POSTGRESQL_PASSWORD=dfsdf4FERg45234SERFsdrf346erbeg
      - POSTGRESQL_DATABASE=postgresxh5
  postgresql-slave:
    image: 'bitnami/postgresql:14.4.0'
    ports:
      - "6432:5432"
    networks:
      - backend
    depends_on:
      - postgres
    environment:
      - POSTGRESQL_REPLICATION_MODE=slave
      - POSTGRESQL_REPLICATION_USER=replicacion_usuario_123f24
      - POSTGRESQL_REPLICATION_PASSWORD=replicacion_contrasenia_123f24
      - POSTGRESQL_MASTER_HOST=postgres
      - POSTGRESQL_PASSWORD=dfsdf4FERg45234SERFsdrf346erbeg
      - POSTGRESQL_MASTER_PORT_NUMBER=5432
  pgadmin:
    restart: always
    image: "dpage/pgadmin4"
    networks:
      - backend
    ports:
      - "90:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: adminag6@adminag6.com
      PGADMIN_DEFAULT_PASSWORD: f436GERT5g35HUty43f46
    depends_on:
      - postgres
  traefik: # apache.app.test - nginx.app.test
    image: traefik:v2.3.6
    ports: 
      - 80:80
      - 443:443
    networks:
      - backend
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/traefik.yml
      - ./acme.json:/acme.json

networks:
  backend:
    driver: bridge
    ipam: 
      driver: default 
volumes:
  postgresql_master_data:







